var search_data = {
    'index': {
        'searchIndex': ["library","library\\commandline","library\\converter","library\\helper","library\\httpfundamental","library\\httpfundamental\\contenttype","library\\object","library\\reporteradapter","library\\session","library\\staticconfiguration","library\\tool","library\\abstractreporteradapter","library\\codeparser","library\\command","library\\commandline\\abstractcommandlinecontroller","library\\commandline\\commandlinecontrollerinterface","library\\commandline\\formater","library\\commandline\\helper","library\\commandline\\stream","library\\commandnotfoundexception","library\\converter\\abstractconverter","library\\converter\\array2ini","library\\converter\\html2text","library\\converter\\xml2array","library\\crypt","library\\factory","library\\factoryinterface","library\\filerotator","library\\helper\\code","library\\helper\\conditionalcomment","library\\helper\\directory","library\\helper\\file","library\\helper\\filesystem","library\\helper\\html","library\\helper\\number","library\\helper\\regex","library\\helper\\request","library\\helper\\romannumber","library\\helper\\text","library\\helper\\url","library\\httpfundamental\\contenttype","library\\httpfundamental\\contenttypeinterface","library\\httpfundamental\\contenttype\\html","library\\httpfundamental\\contenttype\\json","library\\httpfundamental\\contenttype\\plaintext","library\\httpfundamental\\contenttype\\xml","library\\httpfundamental\\cookie","library\\httpfundamental\\request","library\\httpfundamental\\response","library\\logger","library\\object\\abstractinvokable","library\\object\\invokableaccessexception","library\\object\\invokableinterface","library\\object\\registryinvokable","library\\reporter","library\\reporteradapter\\html","library\\router","library\\session\\flashsession","library\\session\\session","library\\session\\sessioninterface","library\\staticconfiguration\\config","library\\staticconfiguration\\configuratorinterface","library\\tool\\morsecode","library\\tool\\pagination","library\\tool\\table","library\\abstractreporteradapter::newline","library\\abstractreporteradapter::tab","library\\abstractreporteradapter::rendertag","library\\codeparser::__construct","library\\codeparser::set_objectname","library\\codeparser::get_objectname","library\\codeparser::set_objecttype","library\\codeparser::get_objecttype","library\\codeparser::get_shortdescription","library\\codeparser::get_longdescription","library\\command::addcache","library\\command::iscached","library\\command::getcached","library\\command::getcache","library\\command::run","library\\command::runcommand","library\\command::getcommandpath","library\\commandline\\abstractcommandlinecontroller::__construct","library\\commandline\\abstractcommandlinecontroller::__tostring","library\\commandline\\abstractcommandlinecontroller::distribute","library\\commandline\\abstractcommandlinecontroller::setdebug","library\\commandline\\abstractcommandlinecontroller::setverbose","library\\commandline\\abstractcommandlinecontroller::setforce","library\\commandline\\abstractcommandlinecontroller::setinteractive","library\\commandline\\abstractcommandlinecontroller::setquiet","library\\commandline\\abstractcommandlinecontroller::adddonemethod","library\\commandline\\abstractcommandlinecontroller::getdonemethods","library\\commandline\\abstractcommandlinecontroller::setscript","library\\commandline\\abstractcommandlinecontroller::getscript","library\\commandline\\abstractcommandlinecontroller::setparameters","library\\commandline\\abstractcommandlinecontroller::getparameters","library\\commandline\\abstractcommandlinecontroller::runhelpcommand","library\\commandline\\abstractcommandlinecontroller::runverbosecommand","library\\commandline\\abstractcommandlinecontroller::runquietcommand","library\\commandline\\abstractcommandlinecontroller::rundebugcommand","library\\commandline\\abstractcommandlinecontroller::runforcecommand","library\\commandline\\abstractcommandlinecontroller::runinteractivecommand","library\\commandline\\abstractcommandlinecontroller::runversioncommand","library\\commandline\\abstractcommandlinecontroller::write","library\\commandline\\abstractcommandlinecontroller::error","library\\commandline\\abstractcommandlinecontroller::parseandwrite","library\\commandline\\abstractcommandlinecontroller::writeerror","library\\commandline\\abstractcommandlinecontroller::writethinerror","library\\commandline\\abstractcommandlinecontroller::writeinfo","library\\commandline\\abstractcommandlinecontroller::writecomment","library\\commandline\\abstractcommandlinecontroller::writehighlight","library\\commandline\\abstractcommandlinecontroller::writebreak","library\\commandline\\abstractcommandlinecontroller::writestop","library\\commandline\\abstractcommandlinecontroller::verbosewrite","library\\commandline\\abstractcommandlinecontroller::debugwrite","library\\commandline\\abstractcommandlinecontroller::prompt","library\\commandline\\abstractcommandlinecontroller::getprompt","library\\commandline\\abstractcommandlinecontroller::writeintro","library\\commandline\\abstractcommandlinecontroller::getversionstring","library\\commandline\\abstractcommandlinecontroller::writenothingtodo","library\\commandline\\abstractcommandlinecontroller::runargumenthelp","library\\commandline\\abstractcommandlinecontroller::usage","library\\commandline\\abstractcommandlinecontroller::getopt","library\\commandline\\abstractcommandlinecontroller::getoptionmethod","library\\commandline\\abstractcommandlinecontroller::getoptiondescription","library\\commandline\\abstractcommandlinecontroller::getoptionhelp","library\\commandline\\commandlinecontrollerinterface::adddonemethod","library\\commandline\\commandlinecontrollerinterface::getdonemethods","library\\commandline\\commandlinecontrollerinterface::setscript","library\\commandline\\commandlinecontrollerinterface::getscript","library\\commandline\\commandlinecontrollerinterface::setparameters","library\\commandline\\commandlinecontrollerinterface::getparameters","library\\commandline\\formater::__construct","library\\commandline\\formater::__tostring","library\\commandline\\formater::__destruct","library\\commandline\\formater::addoption","library\\commandline\\formater::setautospaced","library\\commandline\\formater::setforegroundcolor","library\\commandline\\formater::setbackgroundcolor","library\\commandline\\formater::settextoption","library\\commandline\\formater::setmessage","library\\commandline\\formater::newline","library\\commandline\\formater::message","library\\commandline\\formater::prompt","library\\commandline\\formater::buildtaggedstring","library\\commandline\\formater::parse","library\\commandline\\formater::spacedstr","library\\commandline\\formater::format","library\\commandline\\formater::fetch","library\\commandline\\helper::getopt","library\\commandline\\helper::getoptionmethod","library\\commandline\\helper::getoptiondescription","library\\commandline\\helper::treatoptions","library\\commandline\\helper::getoptionhelp","library\\commandline\\helper::gethelpinfo","library\\commandline\\helper::formathelpstring","library\\commandline\\stream::__construct","library\\commandline\\stream::__exit","library\\commandline\\stream::error","library\\commandline\\stream::write","library\\commandline\\stream::prompt","library\\commandline\\stream::getuserresponse","library\\commandnotfoundexception::__construct","library\\converter\\abstractconverter::convert","library\\converter\\array2ini::convert","library\\converter\\array2ini::doconvert","library\\converter\\html2text::setallowedtags","library\\converter\\html2text::setlinewidth","library\\converter\\html2text::convert","library\\converter\\xml2array::convert","library\\converter\\xml2array::parse","library\\crypt::__construct","library\\crypt::setsalt","library\\crypt::getsalt","library\\crypt::encrypt","library\\crypt::crypt","library\\crypt::unencrypt","library\\crypt::uncrypt","library\\factory::init","library\\factory::__call","library\\factory::setoptions","library\\factory::build","library\\factory::findbuilder","library\\factoryinterface::build","library\\factoryinterface::findbuilder","library\\filerotator::__construct","library\\filerotator::write","library\\filerotator::rotate","library\\filerotator::mustrotate","library\\filerotator::getfilename","library\\helper\\code::getpropertyname","library\\helper\\code::getpropertymethodname","library\\helper\\code::impelementsinterface","library\\helper\\code::extendsclass","library\\helper\\code::isclassinstance","library\\helper\\code::namespaceexists","library\\helper\\code::fetcharguments","library\\helper\\code::organizearguments","library\\helper\\conditionalcomment::buildcondition","library\\helper\\conditionalcomment::writecondition","library\\helper\\conditionalcomment::parsesinglecondition","library\\helper\\directory::slashdirname","library\\helper\\directory::isgitclone","library\\helper\\directory::isdotpath","library\\helper\\directory::ensureexists","library\\helper\\directory::create","library\\helper\\directory::remove","library\\helper\\directory::purge","library\\helper\\directory::chmod","library\\helper\\file::getuniqfilename","library\\helper\\file::formatfilename","library\\helper\\file::getextension","library\\helper\\file::gethumanreadablefilename","library\\helper\\file::gettransformedfilesize","library\\helper\\file::touch","library\\helper\\file::remove","library\\helper\\file::copy","library\\helper\\file::write","library\\helper\\filesystem::resolverelatedpath","library\\helper\\filesystem::getoctal","library\\helper\\html::hasid","library\\helper\\html::getid","library\\helper\\html::getnewid","library\\helper\\html::sethtmltagclosure","library\\helper\\html::writehtmltag","library\\helper\\html::parseattributes","library\\helper\\html::javascriptprotect","library\\helper\\number::isodd","library\\helper\\number::iseven","library\\helper\\number::isprime","library\\helper\\number::isprimordial","library\\helper\\number::getfibonacciitem","library\\helper\\number::getluhnkey","library\\helper\\number::isluhn","library\\helper\\number::getsumofdigits","library\\helper\\number::isselfdescribing","library\\helper\\number::isjollyjumperseries","library\\helper\\regex::getpattern","library\\helper\\request::iscli","library\\helper\\request::isajax","library\\helper\\request::getuserip","library\\helper\\romannumber::isromannumber","library\\helper\\romannumber::romantoint","library\\helper\\romannumber::inttoroman","library\\helper\\text::cut","library\\helper\\text::wrap","library\\helper\\text::stripspecialchars","library\\helper\\text::slugify","library\\helper\\text::gethumanreadable","library\\helper\\text::tocamelcase","library\\helper\\text::fromcamelcase","library\\helper\\url::getrequesturl","library\\helper\\url::gethttpprotocol","library\\helper\\url::parse","library\\helper\\url::resolvepath","library\\helper\\url::resolvehttp","library\\helper\\url::getabsoluteurl","library\\helper\\url::url","library\\helper\\url::getparameter","library\\helper\\url::setparameter","library\\helper\\url::build","library\\helper\\url::isurl","library\\helper\\url::isemail","library\\httpfundamental\\contenttype::createfromcontent","library\\httpfundamental\\contenttype::guesscontenttype","library\\httpfundamental\\contenttype::__construct","library\\httpfundamental\\contenttype::__tostring","library\\httpfundamental\\contenttype::setcontenttype","library\\httpfundamental\\contenttype::getcontenttype","library\\httpfundamental\\contenttype::setcontenttypeobject","library\\httpfundamental\\contenttype::getcontenttypeobject","library\\httpfundamental\\contenttype::preparecontenttype","library\\httpfundamental\\contenttype::prepareresponse","library\\httpfundamental\\contenttype::parsecontent","library\\httpfundamental\\contenttype::preparecontent","library\\httpfundamental\\contenttypeinterface::prepareresponse","library\\httpfundamental\\contenttypeinterface::parsecontent","library\\httpfundamental\\contenttypeinterface::preparecontent","library\\httpfundamental\\contenttypeinterface::getcontenttype","library\\httpfundamental\\contenttype\\html::prepareresponse","library\\httpfundamental\\contenttype\\html::parsecontent","library\\httpfundamental\\contenttype\\html::preparecontent","library\\httpfundamental\\contenttype\\html::getcontenttype","library\\httpfundamental\\contenttype\\json::prepareresponse","library\\httpfundamental\\contenttype\\json::parsecontent","library\\httpfundamental\\contenttype\\json::preparecontent","library\\httpfundamental\\contenttype\\json::getcontenttype","library\\httpfundamental\\contenttype\\plaintext::prepareresponse","library\\httpfundamental\\contenttype\\plaintext::parsecontent","library\\httpfundamental\\contenttype\\plaintext::preparecontent","library\\httpfundamental\\contenttype\\plaintext::getcontenttype","library\\httpfundamental\\contenttype\\xml::prepareresponse","library\\httpfundamental\\contenttype\\xml::parsecontent","library\\httpfundamental\\contenttype\\xml::preparecontent","library\\httpfundamental\\contenttype\\xml::getcontenttype","library\\httpfundamental\\cookie::__construct","library\\httpfundamental\\cookie::setflag","library\\httpfundamental\\cookie::getflag","library\\httpfundamental\\cookie::setname","library\\httpfundamental\\cookie::getname","library\\httpfundamental\\cookie::setvalue","library\\httpfundamental\\cookie::getvalue","library\\httpfundamental\\cookie::getsafevalue","library\\httpfundamental\\cookie::setexpire","library\\httpfundamental\\cookie::getexpire","library\\httpfundamental\\cookie::getsafeexpire","library\\httpfundamental\\cookie::setpath","library\\httpfundamental\\cookie::getpath","library\\httpfundamental\\cookie::getsafepath","library\\httpfundamental\\cookie::setdomain","library\\httpfundamental\\cookie::getdomain","library\\httpfundamental\\cookie::getsafedomain","library\\httpfundamental\\cookie::setsecure","library\\httpfundamental\\cookie::getsecure","library\\httpfundamental\\cookie::getsafesecure","library\\httpfundamental\\cookie::sethttponly","library\\httpfundamental\\cookie::gethttponly","library\\httpfundamental\\cookie::getsafehttponly","library\\httpfundamental\\cookie::sendasraw","library\\httpfundamental\\cookie::sendasencoded","library\\httpfundamental\\cookie::setcookiefuncarguments","library\\httpfundamental\\cookie::getcookiefuncarguments","library\\httpfundamental\\cookie::getcookiefuncargument","library\\httpfundamental\\cookie::addcookiefuncargument","library\\httpfundamental\\cookie::clearcookiefuncargument","library\\httpfundamental\\cookie::exists","library\\httpfundamental\\cookie::read","library\\httpfundamental\\cookie::send","library\\httpfundamental\\cookie::addincookie","library\\httpfundamental\\cookie::clear","library\\httpfundamental\\request::create","library\\httpfundamental\\request::__construct","library\\httpfundamental\\request::guessfromcurrent","library\\httpfundamental\\request::setflag","library\\httpfundamental\\request::getflag","library\\httpfundamental\\request::seturl","library\\httpfundamental\\request::geturl","library\\httpfundamental\\request::setprotocol","library\\httpfundamental\\request::getprotocol","library\\httpfundamental\\request::setmethod","library\\httpfundamental\\request::getmethod","library\\httpfundamental\\request::setheaders","library\\httpfundamental\\request::getheaders","library\\httpfundamental\\request::getheader","library\\httpfundamental\\request::setarguments","library\\httpfundamental\\request::getarguments","library\\httpfundamental\\request::getargument","library\\httpfundamental\\request::setdata","library\\httpfundamental\\request::getdata","library\\httpfundamental\\request::setfiles","library\\httpfundamental\\request::getfiles","library\\httpfundamental\\request::getfile","library\\httpfundamental\\request::setsession","library\\httpfundamental\\request::getsession","library\\httpfundamental\\request::setcookies","library\\httpfundamental\\request::getcookies","library\\httpfundamental\\request::getcookie","library\\httpfundamental\\request::setauthentication","library\\httpfundamental\\request::setauthenticationtype","library\\httpfundamental\\request::setauthenticationuser","library\\httpfundamental\\request::setauthenticationpassword","library\\httpfundamental\\request::getauthentication","library\\httpfundamental\\request::buildurl","library\\httpfundamental\\request::isajax","library\\httpfundamental\\request::iscli","library\\httpfundamental\\request::isget","library\\httpfundamental\\request::ispost","library\\httpfundamental\\request::isput","library\\httpfundamental\\request::getget","library\\httpfundamental\\request::getpost","library\\httpfundamental\\request::getgetorpost","library\\httpfundamental\\request::getpostorget","library\\httpfundamental\\request::cleanargument","library\\httpfundamental\\request::getenvironment","library\\httpfundamental\\request::getclientip","library\\httpfundamental\\request::getallheaders","library\\httpfundamental\\response::__construct","library\\httpfundamental\\response::__tostring","library\\httpfundamental\\response::setprotocol","library\\httpfundamental\\response::getprotocol","library\\httpfundamental\\response::setheaders","library\\httpfundamental\\response::addheader","library\\httpfundamental\\response::getheader","library\\httpfundamental\\response::getheaders","library\\httpfundamental\\response::setstatus","library\\httpfundamental\\response::getstatus","library\\httpfundamental\\response::setcharset","library\\httpfundamental\\response::getcharset","library\\httpfundamental\\response::addcontent","library\\httpfundamental\\response::setcontents","library\\httpfundamental\\response::getcontent","library\\httpfundamental\\response::getcontents","library\\httpfundamental\\response::getcontentsasstring","library\\httpfundamental\\response::setcontenttype","library\\httpfundamental\\response::getcontenttype","library\\httpfundamental\\response::guesscontenttype","library\\httpfundamental\\response::renderheaders","library\\httpfundamental\\response::header","library\\httpfundamental\\response::send","library\\httpfundamental\\response::download","library\\httpfundamental\\response::flush","library\\httpfundamental\\response::redirect","library\\logger::__construct","library\\logger::log","library\\logger::__set","library\\logger::__get","library\\logger::getoptions","library\\logger::interpolate","library\\logger::getuserip","library\\logger::writearray","library\\object\\abstractinvokable::__invoke","library\\object\\abstractinvokable::__call","library\\object\\abstractinvokable::__callstatic","library\\object\\abstractinvokable::__get","library\\object\\abstractinvokable::__set","library\\object\\abstractinvokable::__isset","library\\object\\abstractinvokable::__unset","library\\object\\abstractinvokable::findpropertyname","library\\object\\abstractinvokable::findpropertynamestatic","library\\object\\invokableaccessexception::__construct","library\\object\\invokableinterface::__call","library\\object\\invokableinterface::__callstatic","library\\object\\invokableinterface::__get","library\\object\\invokableinterface::__set","library\\object\\invokableinterface::__isset","library\\object\\invokableinterface::__unset","library\\object\\registryinvokable::__construct","library\\object\\registryinvokable::setflag","library\\object\\registryinvokable::getflag","library\\object\\registryinvokable::__call","library\\object\\registryinvokable::__callstatic","library\\object\\registryinvokable::__get","library\\object\\registryinvokable::__set","library\\object\\registryinvokable::__isset","library\\object\\registryinvokable::__unset","library\\object\\registryinvokable::getdata","library\\object\\registryinvokable::setdata","library\\reporter::__construct","library\\reporter::reset","library\\reporter::__tostring","library\\reporter::setflag","library\\reporter::getflag","library\\reporter::setadaptertype","library\\reporter::getadaptertype","library\\reporter::setadapter","library\\reporter::getadapter","library\\reporter::setoutput","library\\reporter::getoutput","library\\reporter::render","library\\reporter::write","library\\reporter::rendermulti","library\\reporteradapter\\html::rendertag","library\\router::__construct","library\\router::getcollection","library\\router::seturl","library\\router::geturl","library\\router::setroute","library\\router::getroute","library\\router::setrouteparsed","library\\router::getrouteparsed","library\\router::setroutes","library\\router::getroutes","library\\router::setargumentsmap","library\\router::getargumentsmap","library\\router::setmatchers","library\\router::getmatchers","library\\router::routeexists","library\\router::generateurl","library\\router::matchurl","library\\router::distribute","library\\router::forward","library\\router::redirect","library\\router::urlencode","library\\session\\flashsession::__construct","library\\session\\flashsession::read","library\\session\\flashsession::commit","library\\session\\flashsession::hasflash","library\\session\\flashsession::getflash","library\\session\\flashsession::setflash","library\\session\\flashsession::allflashes","library\\session\\flashsession::clearflashes","library\\session\\session::__construct","library\\session\\session::__destruct","library\\session\\session::addsessiontable","library\\session\\session::getsessiontable","library\\session\\session::getid","library\\session\\session::getname","library\\session\\session::isopened","library\\session\\session::isloaded","library\\session\\session::start","library\\session\\session::open","library\\session\\session::close","library\\session\\session::read","library\\session\\session::commit","library\\session\\session::clear","library\\session\\session::regenerateid","library\\session\\session::getattributes","library\\session\\session::has","library\\session\\session::get","library\\session\\session::set","library\\session\\session::remove","library\\session\\session::getbackup","library\\session\\sessioninterface::start","library\\session\\sessioninterface::open","library\\session\\sessioninterface::close","library\\session\\sessioninterface::isopened","library\\session\\sessioninterface::read","library\\session\\sessioninterface::isloaded","library\\session\\sessioninterface::commit","library\\session\\sessioninterface::clear","library\\session\\sessioninterface::regenerateid","library\\session\\sessioninterface::getid","library\\session\\sessioninterface::getname","library\\session\\sessioninterface::getattributes","library\\session\\sessioninterface::has","library\\session\\sessioninterface::get","library\\session\\sessioninterface::set","library\\session\\sessioninterface::remove","library\\staticconfiguration\\config::load","library\\staticconfiguration\\config::loaded","library\\staticconfiguration\\config::setconfigurator","library\\staticconfiguration\\config::getconfigurator","library\\staticconfiguration\\config::setregistry","library\\staticconfiguration\\config::getregistry","library\\staticconfiguration\\config::getdefaults","library\\staticconfiguration\\config::getrequired","library\\staticconfiguration\\config::getinternal","library\\staticconfiguration\\config::validate","library\\staticconfiguration\\config::overload","library\\staticconfiguration\\config::set","library\\staticconfiguration\\config::get","library\\staticconfiguration\\config::getdefault","library\\staticconfiguration\\configuratorinterface::getdefaults","library\\staticconfiguration\\configuratorinterface::getrequired","library\\tool\\morsecode::getletter","library\\tool\\morsecode::getword","library\\tool\\morsecode::getstring","library\\tool\\morsecode::encode","library\\tool\\pagination::__construct","library\\tool\\pagination::setlimit","library\\tool\\pagination::setoffset","library\\tool\\pagination::setpagesnumber","library\\tool\\pagination::setitemsnumber","library\\tool\\pagination::setcollection","library\\tool\\pagination::getlimit","library\\tool\\pagination::getoffset","library\\tool\\pagination::getpagesnumber","library\\tool\\pagination::getitemsnumber","library\\tool\\pagination::getcollection","library\\tool\\pagination::getpaginatedcollection","library\\tool\\pagination::setoffsetbypagenumber","library\\tool\\pagination::exists","library\\tool\\pagination::current","library\\tool\\pagination::key","library\\tool\\pagination::next","library\\tool\\pagination::rewind","library\\tool\\pagination::valid","library\\tool\\pagination::isfirst","library\\tool\\pagination::islast","library\\tool\\pagination::iscurrent","library\\tool\\pagination::getpagenumber","library\\tool\\table::__construct","library\\tool\\table::__tostring","library\\tool\\table::gettable","library\\tool\\table::gettableiterator","library\\tool\\table::getline","library\\tool\\table::addline","library\\tool\\table::getcolumn","library\\tool\\table::addcolumn","library\\tool\\table::getcell","library\\tool\\table::addcell","library\\tool\\table::setpadflag","library\\tool\\table::getpadflag","library\\tool\\table::settitle","library\\tool\\table::gettitle","library\\tool\\table::setheader","library\\tool\\table::setheaderline","library\\tool\\table::addheaderline","library\\tool\\table::setheadercolumn","library\\tool\\table::addheadercolumn","library\\tool\\table::setheadercell","library\\tool\\table::addheadercell","library\\tool\\table::getheader","library\\tool\\table::getheaderline","library\\tool\\table::getheadercolumn","library\\tool\\table::getheadercell","library\\tool\\table::setbody","library\\tool\\table::setbodyline","library\\tool\\table::addbodyline","library\\tool\\table::setbodycolumn","library\\tool\\table::addbodycolumn","library\\tool\\table::setbodycell","library\\tool\\table::addbodycell","library\\tool\\table::getbody","library\\tool\\table::getbodyline","library\\tool\\table::getbodycolumn","library\\tool\\table::getbodycell","library\\tool\\table::setfooter","library\\tool\\table::setfooterline","library\\tool\\table::addfooterline","library\\tool\\table::setfootercolumn","library\\tool\\table::addfootercolumn","library\\tool\\table::setfootercell","library\\tool\\table::addfootercell","library\\tool\\table::getfooter","library\\tool\\table::getfooterline","library\\tool\\table::getfootercolumn","library\\tool\\table::getfootercell","library\\tool\\table::gettablecolumnsize","library\\tool\\table::gettablelinesize","library\\tool\\table::gettablecellsize","library\\tool\\table::getsizesinfos","library\\tool\\table::_resetsizes","library\\tool\\table::render","library\\tool\\table::setcontents","library\\tool\\table::setcontentline","library\\tool\\table::addcontentline","library\\tool\\table::setcontentcolumn","library\\tool\\table::setcontentcol","library\\tool\\table::setbodycol","library\\tool\\table::addcontentcolumn","library\\tool\\table::addcontentcol","library\\tool\\table::addbodycol","library\\tool\\table::setcontentcell","library\\tool\\table::addcontentcell","library\\tool\\table::getcontents","library\\tool\\table::getcontentline","library\\tool\\table::getcontentcolumn","library\\tool\\table::getcontentcol","library\\tool\\table::getbodycol","library\\tool\\table::getcontentcell","library\\tool\\table::gettablecolsize","library\\tool\\table::getcol","library\\tool\\table::getheadercol","library\\tool\\table::addheadercol","library\\tool\\table::setheadercol","library\\tool\\table::getfootercol","library\\tool\\table::addfootercol","library\\tool\\table::setfootercol","library\\tool\\table::getcolumnsize","library\\tool\\table::getcolsize","library\\tool\\table::getlinesize","library\\tool\\table::getcellsize"],
        'info': [["Library","","Library.html","","",3],["Library\\CommandLine","","Library\/CommandLine.html","","",3],["Library\\Converter","","Library\/Converter.html","","",3],["Library\\Helper","","Library\/Helper.html","","",3],["Library\\HttpFundamental","","Library\/HttpFundamental.html","","",3],["Library\\HttpFundamental\\ContentType","","Library\/HttpFundamental\/ContentType.html","","",3],["Library\\Object","","Library\/Object.html","","",3],["Library\\ReporterAdapter","","Library\/ReporterAdapter.html","","",3],["Library\\Session","","Library\/Session.html","","",3],["Library\\StaticConfiguration","","Library\/StaticConfiguration.html","","",3],["Library\\Tool","","Library\/Tool.html","","",3],["AbstractReporterAdapter","Library","Library\/AbstractReporterAdapter.html","","Reporter Adapters interface",1],["CodeParser","Library","Library\/CodeParser.html","","Source code parser",1],["Command","Library","Library\/Command.html","","Largely inspired from ",1],["AbstractCommandLineController","Library\\CommandLine","Library\/CommandLine\/AbstractCommandLineController.html","","Basic command line controller",1],["CommandLineControllerInterface","Library\\CommandLine","Library\/CommandLine\/CommandLineControllerInterface.html","","CommandLine controller interface",1],["Formater","Library\\CommandLine","Library\/CommandLine\/Formater.html","","",1],["Helper","Library\\CommandLine","Library\/CommandLine\/Helper.html","","",1],["Stream","Library\\CommandLine","Library\/CommandLine\/Stream.html","","Command line streams manager",1],["CommandNotFoundException","Library","Library\/CommandNotFoundException.html"," < RuntimeException","",1],["AbstractConverter","Library\\Converter","Library\/Converter\/AbstractConverter.html","","",1],["Array2INI","Library\\Converter","Library\/Converter\/Array2INI.html"," < AbstractConverter","Array to INI format converter",1],["Html2Text","Library\\Converter","Library\/Converter\/Html2Text.html"," < AbstractConverter","HTML to plain text converter",1],["Xml2Array","Library\\Converter","Library\/Converter\/Xml2Array.html"," < AbstractConverter","XML to array converter",1],["Crypt","Library","Library\/Crypt.html","","Simple crypter",1],["Factory","Library","Library\/Factory.html"," < AbstractStaticCreator","Factory will try to create an object following user",1],["FactoryInterface","Library","Library\/FactoryInterface.html","","",1],["FileRotator","Library","Library\/FileRotator.html","","Rotate system for files",1],["Code","Library\\Helper","Library\/Helper\/Code.html","","Code helper",1],["ConditionalComment","Library\\Helper","Library\/Helper\/ConditionalComment.html","","Internet Explorer conditional HTML comment",1],["Directory","Library\\Helper","Library\/Helper\/Directory.html","","Directory helper",1],["File","Library\\Helper","Library\/Helper\/File.html","","File helper",1],["Filesystem","Library\\Helper","Library\/Helper\/Filesystem.html","","File helper",1],["Html","Library\\Helper","Library\/Helper\/Html.html","","HTML language helper",1],["Number","Library\\Helper","Library\/Helper\/Number.html","","Number helper",1],["Regex","Library\\Helper","Library\/Helper\/Regex.html","","Regex helper",1],["Request","Library\\Helper","Library\/Helper\/Request.html","","Request helper",1],["RomanNumber","Library\\Helper","Library\/Helper\/RomanNumber.html","","RomanNumber helper",1],["Text","Library\\Helper","Library\/Helper\/Text.html","","Text helper",1],["Url","Library\\Helper","Library\/Helper\/Url.html","","URL common methods",1],["ContentType","Library\\HttpFundamental","Library\/HttpFundamental\/ContentType.html","","",1],["ContentTypeInterface","Library\\HttpFundamental","Library\/HttpFundamental\/ContentTypeInterface.html","","",1],["Html","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/Html.html","","",1],["Json","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/Json.html","","",1],["PlainText","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/PlainText.html","","",1],["Xml","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/Xml.html","","",1],["Cookie","Library\\HttpFundamental","Library\/HttpFundamental\/Cookie.html","","",1],["Request","Library\\HttpFundamental","Library\/HttpFundamental\/Request.html","","The global request class",1],["Response","Library\\HttpFundamental","Library\/HttpFundamental\/Response.html","","The global response class",1],["Logger","Library","Library\/Logger.html"," < AbstractLogger","Write some log infos in log files",1],["AbstractInvokable","Library\\Object","Library\/Object\/AbstractInvokable.html","","Magic handling of properties access",1],["InvokableAccessException","Library\\Object","Library\/Object\/InvokableAccessException.html"," < OutOfBoundsException","",1],["InvokableInterface","Library\\Object","Library\/Object\/InvokableInterface.html","","Magic handling of properties access interface",1],["RegistryInvokable","Library\\Object","Library\/Object\/RegistryInvokable.html","","Magic handling of properties access",1],["Reporter","Library","Library\/Reporter.html","","",1],["Html","Library\\ReporterAdapter","Library\/ReporterAdapter\/Html.html"," < AbstractReporterAdapter","",1],["Router","Library","Library\/Router.html","","The global router class",1],["FlashSession","Library\\Session","Library\/Session\/FlashSession.html"," < Session","Session manager class",1],["Session","Library\\Session","Library\/Session\/Session.html","","Session manager class",1],["SessionInterface","Library\\Session","Library\/Session\/SessionInterface.html","","",1],["Config","Library\\StaticConfiguration","Library\/StaticConfiguration\/Config.html","","Static global configuration object manager",1],["ConfiguratorInterface","Library\\StaticConfiguration","Library\/StaticConfiguration\/ConfiguratorInterface.html","","Config class interface to use with \\Library\\StaticConfiguration\\Config",1],["MorseCode","Library\\Tool","Library\/Tool\/MorseCode.html","","",1],["Pagination","Library\\Tool","Library\/Tool\/Pagination.html","","",1],["Table","Library\\Tool","Library\/Tool\/Table.html","","Table helper tool",1],["AbstractReporterAdapter::newLine","Library\\AbstractReporterAdapter","Library\/AbstractReporterAdapter.html#method_newLine","()","Adapter new line sign",2],["AbstractReporterAdapter::tab","Library\\AbstractReporterAdapter","Library\/AbstractReporterAdapter.html#method_tab","()","Adapter new tabulation",2],["AbstractReporterAdapter::renderTag","Library\\AbstractReporterAdapter","Library\/AbstractReporterAdapter.html#method_renderTag","(string $content, string $tag_type = &#039;default&#039;)","Render a content with a specific tag mask",2],["CodeParser::__construct","Library\\CodeParser","Library\/CodeParser.html#method___construct","(string $object_name = null, int $object_type = self::PARSE_CLASS)","Construct a code parser object",2],["CodeParser::set_objectName","Library\\CodeParser","Library\/CodeParser.html#method_set_objectName","($object_name = null)","",2],["CodeParser::get_objectName","Library\\CodeParser","Library\/CodeParser.html#method_get_objectName","()","",2],["CodeParser::set_objectType","Library\\CodeParser","Library\/CodeParser.html#method_set_objectType","($object_type = null)","",2],["CodeParser::get_objectType","Library\\CodeParser","Library\/CodeParser.html#method_get_objectType","()","",2],["CodeParser::get_shortDescription","Library\\CodeParser","Library\/CodeParser.html#method_get_shortDescription","($object_name = null, $object_type = null)","",2],["CodeParser::get_longDescription","Library\\CodeParser","Library\/CodeParser.html#method_get_longDescription","($object_name = null, $object_type = null)","",2],["Command::addCache","Library\\Command","Library\/Command.html#method_addCache","($command, $result, $error, $status, $cwd = null, $env = null, $options = null)","",2],["Command::isCached","Library\\Command","Library\/Command.html#method_isCached","($command, $cwd = null)","",2],["Command::getCached","Library\\Command","Library\/Command.html#method_getCached","($command, $cwd = null)","",2],["Command::getCache","Library\\Command","Library\/Command.html#method_getCache","()","",2],["Command::run","Library\\Command","Library\/Command.html#method_run","(string $command, string $path = null, bool $force = false)","Run a command on a Linux\/UNIX system reading it from",2],["Command::runCommand","Library\\Command","Library\/Command.html#method_runCommand","(string $command, string $path = null)","Run a command on a Linux\/UNIX system",2],["Command::getCommandPath","Library\\Command","Library\/Command.html#method_getCommandPath","(string $cmd)","Get the system path of a command",2],["AbstractCommandLineController::__construct","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method___construct","(array $options = array())","",2],["AbstractCommandLineController::__toString","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method___toString","()","Magic distribution when printing object",2],["AbstractCommandLineController::distribute","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_distribute","()","Distribution of the work",2],["AbstractCommandLineController::setDebug","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setDebug","(bool $dbg = true)","",2],["AbstractCommandLineController::setVerbose","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setVerbose","(bool $vbr = true)","",2],["AbstractCommandLineController::setForce","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setForce","(bool $frc = true)","",2],["AbstractCommandLineController::setInteractive","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setInteractive","(bool $frc = true)","",2],["AbstractCommandLineController::setQuiet","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setQuiet","()","",2],["AbstractCommandLineController::addDoneMethod","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_addDoneMethod","(string $_cls_meth)","",2],["AbstractCommandLineController::getDoneMethods","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getDoneMethods","()","",2],["AbstractCommandLineController::setScript","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setScript","(string $script_name)","Set the current command line script called",2],["AbstractCommandLineController::getScript","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getScript","()","Get the current command line script called",2],["AbstractCommandLineController::setParameters","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setParameters","(array $params)","Set the command line parameters",2],["AbstractCommandLineController::getParameters","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getParameters","()","Get the parameters collection",2],["AbstractCommandLineController::runHelpCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runHelpCommand","($opt = null)","List of all options and features of the command line",2],["AbstractCommandLineController::runVerboseCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runVerboseCommand","()","Run the command line in verbose mode,",2],["AbstractCommandLineController::runQuietCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runQuietCommand","()","Run the command line in quiet mode, trying",2],["AbstractCommandLineController::runDebugCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runDebugCommand","()","Run the command line in debug mode, writing",2],["AbstractCommandLineController::runForceCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runForceCommand","()","Run the command line in forced mode ;",2],["AbstractCommandLineController::runInteractiveCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runInteractiveCommand","()","Run the command line in interactive mode",2],["AbstractCommandLineController::runVersionCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runVersionCommand","()","Get versions of system environment",2],["AbstractCommandLineController::write","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_write","(null $str = null, bool $new_line = true)","Format and write a string to STDOUT",2],["AbstractCommandLineController::error","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_error","(null $str = null, int $status = 1, bool $new_line = true)","Format and write an error message to STDOUT (or STDERR)",2],["AbstractCommandLineController::parseAndWrite","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_parseAndWrite","(string $str, null $type = null, bool $spaced = false)","Parse, format and write a message to STDOUT",2],["AbstractCommandLineController::writeError","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeError","(string $str)","",2],["AbstractCommandLineController::writeThinError","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeThinError","(string $str)","",2],["AbstractCommandLineController::writeInfo","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeInfo","(string $str)","",2],["AbstractCommandLineController::writeComment","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeComment","(string $str)","",2],["AbstractCommandLineController::writeHighlight","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeHighlight","(string $str)","",2],["AbstractCommandLineController::writeBreak","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeBreak","()","",2],["AbstractCommandLineController::writeStop","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeStop","()","",2],["AbstractCommandLineController::verboseWrite","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_verboseWrite","(null $str = null, bool $new_line = true)","Write a string only in verbose mode",2],["AbstractCommandLineController::debugWrite","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_debugWrite","(null $str = null, bool $new_line = true)","Write a string only in debug mode",2],["AbstractCommandLineController::prompt","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_prompt","(string|null $str = null, mixed|null $default = null)","Prompt user input",2],["AbstractCommandLineController::getPrompt","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getPrompt","()","Get last user input",2],["AbstractCommandLineController::writeIntro","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeIntro","()","",2],["AbstractCommandLineController::getVersionString","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getVersionString","()","",2],["AbstractCommandLineController::writeNothingToDo","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeNothingToDo","()","",2],["AbstractCommandLineController::runArgumentHelp","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runArgumentHelp","($arg = null)","",2],["AbstractCommandLineController::usage","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_usage","($opt = null)","",2],["AbstractCommandLineController::getopt","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getopt","()","",2],["AbstractCommandLineController::getOptionMethod","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getOptionMethod","($arg = null)","",2],["AbstractCommandLineController::getOptionDescription","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getOptionDescription","($arg = null)","",2],["AbstractCommandLineController::getOptionHelp","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getOptionHelp","($arg = null)","",2],["CommandLineControllerInterface::addDoneMethod","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_addDoneMethod","(string $method_name)","Adding a method in the collection of done methods",2],["CommandLineControllerInterface::getDoneMethods","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_getDoneMethods","()","Get the collection of done methods",2],["CommandLineControllerInterface::setScript","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_setScript","(string $script_name)","Set the current command line script called",2],["CommandLineControllerInterface::getScript","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_getScript","()","Get the current command line script called",2],["CommandLineControllerInterface::setParameters","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_setParameters","(array $params)","Set the command line parameters",2],["CommandLineControllerInterface::getParameters","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_getParameters","()","Get the parameters collection",2],["Formater::__construct","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method___construct","(array $options = array())","",2],["Formater::__toString","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method___toString","()","",2],["Formater::__destruct","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method___destruct","()","",2],["Formater::addOption","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_addOption","($option_name, $option_value)","",2],["Formater::setAutospaced","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setAutospaced","($autospaced = null)","",2],["Formater::setForegroundColor","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setForegroundColor","($foreground = null)","",2],["Formater::setBackgroundColor","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setBackgroundColor","($background = null)","",2],["Formater::setTextOption","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setTextOption","($option = null)","",2],["Formater::setMessage","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setMessage","($text = null, $foreground = null, $background = null, $option = null)","",2],["Formater::newLine","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_newLine","()","",2],["Formater::message","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_message","($text = null, $foreground = null, $background = null, $option = null)","",2],["Formater::prompt","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_prompt","($text = null, $default = null)","",2],["Formater::buildTaggedString","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_buildTaggedString","($str, $type = null)","",2],["Formater::parse","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_parse","($message)","",2],["Formater::spacedStr","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_spacedStr","($str, $type = null, $newLines = false)","",2],["Formater::format","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_format","($text = null, $foreground = null, $background = null, $option = null)","",2],["Formater::fetch","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_fetch","($display = true, $exit = false, $last_nl = true)","",2],["Helper::getopt","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getopt","(array $options)","",2],["Helper::getOptionMethod","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getOptionMethod","(array $options, $arg = null)","",2],["Helper::getOptionDescription","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getOptionDescription","($arg, $caller)","",2],["Helper::treatOptions","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_treatOptions","(array $options, $caller)","",2],["Helper::getOptionHelp","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getOptionHelp","($arg, $caller)","",2],["Helper::getHelpInfo","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getHelpInfo","(array $options = array(), <a href=\"Library\/CommandLine\/Formater.html\"><abbr title=\"Library\\CommandLine\\Formater\">Formater<\/abbr><\/a> $formater, $caller)","",2],["Helper::formatHelpString","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_formatHelpString","($title = null, $contents = null, <a href=\"Library\/CommandLine\/Formater.html\"><abbr title=\"Library\\CommandLine\\Formater\">Formater<\/abbr><\/a> $formater)","",2],["Stream::__construct","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method___construct","()","The three streams are initiated",2],["Stream::__exit","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method___exit","(string $str = null)","Exit the script execution",2],["Stream::error","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_error","(string $str, int $status = 1, bool $new_line = true)","Write a message on `STDERR` and exit with an error",2],["Stream::write","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_write","(string $str, bool $new_line = true)","Write a message on `STDOUT`",2],["Stream::prompt","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_prompt","(string $str)","Write a message on `STDOUT` and wait for a user input",2],["Stream::getUserResponse","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_getUserResponse","()","Get last user input on `STDIN`",2],["CommandNotFoundException::__construct","Library\\CommandNotFoundException","Library\/CommandNotFoundException.html#method___construct","($command = &#039;&#039;, $code, <abbr title=\"Library\\Exception\">Exception<\/abbr> $previous = null)","",2],["AbstractConverter::convert","Library\\Converter\\AbstractConverter","Library\/Converter\/AbstractConverter.html#method_convert","(mixed $content)","Process a content conversion",2],["Array2INI::convert","Library\\Converter\\Array2INI","Library\/Converter\/Array2INI.html#method_convert","($data)","Process a content conversion",2],["Array2INI::doConvert","Library\\Converter\\Array2INI","Library\/Converter\/Array2INI.html#method_doConvert","(array $data, array $parent = array())","",2],["Html2Text::setAllowedTags","Library\\Converter\\Html2Text","Library\/Converter\/Html2Text.html#method_setAllowedTags","($tags)","",2],["Html2Text::setLineWidth","Library\\Converter\\Html2Text","Library\/Converter\/Html2Text.html#method_setLineWidth","($line_width)","",2],["Html2Text::convert","Library\\Converter\\Html2Text","Library\/Converter\/Html2Text.html#method_convert","(mixed $content, $allowed_tags = null, $line_width = null)","Process a content conversion",2],["Xml2Array::convert","Library\\Converter\\Xml2Array","Library\/Converter\/Xml2Array.html#method_convert","($xmlstr)","Process a content conversion",2],["Xml2Array::parse","Library\\Converter\\Xml2Array","Library\/Converter\/Xml2Array.html#method_parse","($node)","",2],["Crypt::__construct","Library\\Crypt","Library\/Crypt.html#method___construct","($salt = null)","",2],["Crypt::setSalt","Library\\Crypt","Library\/Crypt.html#method_setSalt","($salt)","",2],["Crypt::getSalt","Library\\Crypt","Library\/Crypt.html#method_getSalt","()","",2],["Crypt::encrypt","Library\\Crypt","Library\/Crypt.html#method_encrypt","($str = null, $key = null)","Encryption function      $Key=\"what\"     $MonTexte=\"Lorem",2],["Crypt::crypt","Library\\Crypt","Library\/Crypt.html#method_crypt","($str = null, $key = null)","Alias of self::encrypt",2],["Crypt::unencrypt","Library\\Crypt","Library\/Crypt.html#method_unencrypt","($str = null, $key = null)","Decryption function",2],["Crypt::uncrypt","Library\\Crypt","Library\/Crypt.html#method_uncrypt","($str = null, $key = null)","Alias of self::unencrypt",2],["Factory::init","Library\\Factory","Library\/Factory.html#method_init","(array $options = null)","Initialize the factory with an array of options",2],["Factory::__call","Library\\Factory","Library\/Factory.html#method___call","(string $name, array $arguments)","Magic method to allow usage of `$factory->propertyInCamelCase()`",2],["Factory::setOptions","Library\\Factory","Library\/Factory.html#method_setOptions","(array $options)","Set the object options like `property => value`",2],["Factory::build","Library\\Factory","Library\/Factory.html#method_build","(string $name, array $parameters = null, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Build the object instance following current factory",2],["Factory::findBuilder","Library\\Factory","Library\/Factory.html#method_findBuilder","(string $name, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Find the object builder class following current factory",2],["FactoryInterface::build","Library\\FactoryInterface","Library\/FactoryInterface.html#method_build","(string $name, array $parameters = null, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Build the object instance following current factory",2],["FactoryInterface::findBuilder","Library\\FactoryInterface","Library\/FactoryInterface.html#method_findBuilder","(string $name, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Find the object builder class following current factory",2],["FileRotator::__construct","Library\\FileRotator","Library\/FileRotator.html#method___construct","(string $file_path, int $flag = self::ROTATE_PERIODIC, array $user_options = array())","Creation of a new logger entry",2],["FileRotator::write","Library\\FileRotator","Library\/FileRotator.html#method_write","(string $content = &#039;&#039;)","Write a string in the file",2],["FileRotator::rotate","Library\\FileRotator","Library\/FileRotator.html#method_rotate","(bool $force = false)","Rotate file if so",2],["FileRotator::mustRotate","Library\\FileRotator","Library\/FileRotator.html#method_mustRotate","()","Is the current file needs to be rotated",2],["FileRotator::getFilename","Library\\FileRotator","Library\/FileRotator.html#method_getFilename","(string $file_name, int $rotation_index)","Get the name of a file to rotate",2],["Code::getPropertyName","Library\\Helper\\Code","Library\/Helper\/Code.html#method_getPropertyName","(string $name)","Transforms a property name from CamelCase to underscored",2],["Code::getPropertyMethodName","Library\\Helper\\Code","Library\/Helper\/Code.html#method_getPropertyMethodName","(string $name)","Transform a property name from underscored to CamelCase",2],["Code::impelementsInterface","Library\\Helper\\Code","Library\/Helper\/Code.html#method_impelementsInterface","(string|object $class_name, string $interface_name)","Check if a class implements a certain interface",2],["Code::extendsClass","Library\\Helper\\Code","Library\/Helper\/Code.html#method_extendsClass","(string|object $class_name, string $mother_name)","Check if a class extends a certain class",2],["Code::isClassInstance","Library\\Helper\\Code","Library\/Helper\/Code.html#method_isClassInstance","(object $object, string $class_name)","Check if a an object is an instance of a class",2],["Code::namespaceExists","Library\\Helper\\Code","Library\/Helper\/Code.html#method_namespaceExists","(string $namespace)","Test if a namespace can be found in declared classes",2],["Code::fetchArguments","Library\\Helper\\Code","Library\/Helper\/Code.html#method_fetchArguments","(string $method_name = null, mixed $arguments = null, string $class_name = null, array $logs = array())","Launch a function or class's method fetching it arguments",2],["Code::organizeArguments","Library\\Helper\\Code","Library\/Helper\/Code.html#method_organizeArguments","(string $method_name = null, mixed $arguments = null, string $class_name = null, array $logs = array())","Organize an array of arguments to pass to a function",2],["ConditionalComment::buildCondition","Library\\Helper\\ConditionalComment","Library\/Helper\/ConditionalComment.html#method_buildCondition","($content, $condition = &#039;if IE&#039;, $operator = &#039;OR&#039;, $global = false)","Build an HTML condition string for Internet Explorer",2],["ConditionalComment::writeCondition","Library\\Helper\\ConditionalComment","Library\/Helper\/ConditionalComment.html#method_writeCondition","(string $content, string $condition = null, bool $global = false)","Write an HTML condition for Internet Explorer around",2],["ConditionalComment::parseSingleCondition","Library\\Helper\\ConditionalComment","Library\/Helper\/ConditionalComment.html#method_parseSingleCondition","(string $condition)","Parse a single condition item replacing shortcuts",2],["Directory::slashDirname","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_slashDirname","(string $dirname = null)","Get a dirname with one and only trailing slash",2],["Directory::isGitClone","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_isGitClone","(string $path = null)","Test if a path seems to be a git clone",2],["Directory::isDotPath","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_isDotPath","(string $path = null)","Test if a filename seems to have a dot as first character",2],["Directory::ensureExists","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_ensureExists","(string $path, int $mode = self::DEFAULT_UNIX_CHMOD_DIRECTORIES, bool $recursive = true)","Build a directory with its whole hierarchy if necessary",2],["Directory::create","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_create","(string $path, int $mode = self::DEFAULT_UNIX_CHMOD_DIRECTORIES, bool $recursive = true)","Create a directory if necessary",2],["Directory::remove","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_remove","(string $path, array $logs = array())","Remove a directory with its whole contents",2],["Directory::purge","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_purge","(string $path, array $logs = array())","Remove a directory contents but not the directory itself",2],["Directory::chmod","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_chmod","(string $path, int $mode = self::DEFAULT_UNIX_CHMOD_DIRECTORIES, bool $recursive = true, int $file_mode = self::DEFAULT_UNIX_CHMOD_FILES, array $logs = array())","Change rights on a directory",2],["File::getUniqFilename","Library\\Helper\\File","Library\/Helper\/File.html#method_getUniqFilename","(string $filename = &#039;&#039;, string $dir = null, boolean $force_file = true, string $extension = &#039;txt&#039;)","Returns a filename or directory that does not exist",2],["File::formatFilename","Library\\Helper\\File","Library\/Helper\/File.html#method_formatFilename","(string $filename = &#039;&#039;, boolean $lowercase = false, string $delimiter = &#039;-&#039;)","Formatting file names",2],["File::getExtension","Library\\Helper\\File","Library\/Helper\/File.html#method_getExtension","(string $file_name = &#039;&#039;, bool $dot = false)","Returns the extension of a file name",2],["File::getHumanReadableFilename","Library\\Helper\\File","Library\/Helper\/File.html#method_getHumanReadableFilename","(string $file_name = &#039;&#039;)","Render a human readable string from a file name",2],["File::getTransformedFilesize","Library\\Helper\\File","Library\/Helper\/File.html#method_getTransformedFilesize","(float $size, int $round = 3, string $dec_delimiter = &#039;,&#039;)","Returns a formatted file size in bytes or derived unit",2],["File::touch","Library\\Helper\\File","Library\/Helper\/File.html#method_touch","(string $file_path, array $logs = array())","Create an empty file or touch an existing file",2],["File::remove","Library\\Helper\\File","Library\/Helper\/File.html#method_remove","(string $file_path, array $logs = array())","Remove a file if it exists",2],["File::copy","Library\\Helper\\File","Library\/Helper\/File.html#method_copy","(string $file_path, string $target_path, bool $force = false, array $logs = array())","Copy file `$file_path` if it exists to `$target_path`",2],["File::write","Library\\Helper\\File","Library\/Helper\/File.html#method_write","(string $file_path, string $content, string $type = &#039;a&#039;, bool $force = false, array $logs = array())","Write a content in a file",2],["Filesystem::resolveRelatedPath","Library\\Helper\\Filesystem","Library\/Helper\/Filesystem.html#method_resolveRelatedPath","(string $from, string $to)","Returns a relative path between two filesystem realpaths",2],["Filesystem::getOctal","Library\\Helper\\Filesystem","Library\/Helper\/Filesystem.html#method_getOctal","(int $int)","Get safely the octal form of `$int` if necessary",2],["Html::hasId","Library\\Helper\\Html","Library\/Helper\/Html.html#method_hasId","(string $reference)","Verify if a reference is already defined in the DOM",2],["Html::getId","Library\\Helper\\Html","Library\/Helper\/Html.html#method_getId","(string $reference = null, string|bool $base_id = null)","Get a DOM unique ID",2],["Html::getNewId","Library\\Helper\\Html","Library\/Helper\/Html.html#method_getNewId","(string $reference = null, string|bool $base_id = null)","Create and get a new DOM unique ID",2],["Html::setHtmlTagClosure","Library\\Helper\\Html","Library\/Helper\/Html.html#method_setHtmlTagClosure","(string $closure)","Set the HTML tags closure (` \/>` by default)",2],["Html::writeHtmlTag","Library\\Helper\\Html","Library\/Helper\/Html.html#method_writeHtmlTag","(string $tag_name, string $content = &#039;&#039;, array $attrs = array(), bool $intag_close = false)","Build an HTML string for a specific tag with attributes",2],["Html::parseAttributes","Library\\Helper\\Html","Library\/Helper\/Html.html#method_parseAttributes","(array $attrs = array())","Build an attributes HTML string from an array like",2],["Html::javascriptProtect","Library\\Helper\\Html","Library\/Helper\/Html.html#method_javascriptProtect","(string $str = &#039;&#039;, bool $protect_quotes = false)","Build an HTML string to use in javascripts attributes",2],["Number::isOdd","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isOdd","(int $val)","Test if an integer is an \"odd number\"",2],["Number::isEven","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isEven","(int $val)","Test if an integer is an \"even number\"",2],["Number::isPrime","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isPrime","(int $val)","Test if an integer is a \"prime number\"",2],["Number::isPrimordial","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isPrimordial","(int $val)","Test if an integer is a \"primordial number\"",2],["Number::getFibonacciItem","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getFibonacciItem","(int $val)","Get the `$val` element of the Fibonacci suite",2],["Number::getLuhnKey","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getLuhnKey","(int $val)","Luhn formula",2],["Number::isLuhn","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isLuhn","(int $val)","Check id last number in a suite is a Luhn key",2],["Number::getSumOfDigits","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getSumOfDigits","(<abbr title=\"Library\\Helper\\$a\">$a<\/abbr> $a)","Calculate the sum of the digits of a number (its absolute",2],["Number::isSelfDescribing","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isSelfDescribing","(<abbr title=\"Library\\Helper\\$a\">$a<\/abbr> $a)","Test if a number is \"self-describing\":",2],["Number::isJollyJumperSeries","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isJollyJumperSeries","(array $items)","Test if a series of numbers is a \"Jolly Jumper\":",2],["Regex::getPattern","Library\\Helper\\Regex","Library\/Helper\/Regex.html#method_getPattern","(string $string = &#039;&#039;, string $delimiter = &#039;#&#039;, string $options = &#039;i&#039;, bool $strict = false)","Get a read-to-use regular expression from a string",2],["Request::isCli","Library\\Helper\\Request","Library\/Helper\/Request.html#method_isCli","()","Check if the request is sent by command line interface",2],["Request::isAjax","Library\\Helper\\Request","Library\/Helper\/Request.html#method_isAjax","()","Check if the request is sent via AJAX",2],["Request::getUserIp","Library\\Helper\\Request","Library\/Helper\/Request.html#method_getUserIp","()","Get the IP address of request device",2],["RomanNumber::isRomanNumber","Library\\Helper\\RomanNumber","Library\/Helper\/RomanNumber.html#method_isRomanNumber","(<abbr title=\"Library\\Helper\\$roman\">$roman<\/abbr> $roman)","",2],["RomanNumber::romanToInt","Library\\Helper\\RomanNumber","Library\/Helper\/RomanNumber.html#method_romanToInt","(<abbr title=\"Library\\Helper\\$str\">$str<\/abbr> $str)","Get the integer equivalent from roman notation",2],["RomanNumber::intToRoman","Library\\Helper\\RomanNumber","Library\/Helper\/RomanNumber.html#method_intToRoman","(<abbr title=\"Library\\Helper\\$a\">$a<\/abbr> $a)","Get the roman notation of a number inferior to 5000",2],["Text::cut","Library\\Helper\\Text","Library\/Helper\/Text.html#method_cut","(string $string = &#039;&#039;, int $length = 120, string $end_str = &#039; ...&#039;)","Truncate a string at a maximum length, adding it a",2],["Text::wrap","Library\\Helper\\Text","Library\/Helper\/Text.html#method_wrap","($str, $line_length = 75, $separator = PHP_EOL)","",2],["Text::stripSpecialChars","Library\\Helper\\Text","Library\/Helper\/Text.html#method_stripSpecialChars","(string $string = &#039;&#039;, string $authorized = &#039;&#039;)","Strip all special characters in a string",2],["Text::slugify","Library\\Helper\\Text","Library\/Helper\/Text.html#method_slugify","(string $string = &#039;&#039;)","Get a slugified string",2],["Text::getHumanReadable","Library\\Helper\\Text","Library\/Helper\/Text.html#method_getHumanReadable","(string $string = &#039;&#039;)","Transform a string to a human readable one",2],["Text::toCamelCase","Library\\Helper\\Text","Library\/Helper\/Text.html#method_toCamelCase","(string $name = &#039;&#039;, string $replace = &#039;_&#039;, bool $capitalize_first_char = true)","Transform a name in CamelCase",2],["Text::fromCamelCase","Library\\Helper\\Text","Library\/Helper\/Text.html#method_fromCamelCase","(string $name = &#039;&#039;, string $replace = &#039;_&#039;, bool $lowerize_first_char = true)","Transform a name from CamelCase to other",2],["Url::getRequestUrl","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getRequestUrl","(bool $entities = false, bool $base = false, bool $no_file = false, bool $no_rewrite = false)","Get the current browser\/server URL",2],["Url::getHttpProtocol","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getHttpProtocol","()","Get the current 'http' or 'https' protocol",2],["Url::parse","Library\\Helper\\Url","Library\/Helper\/Url.html#method_parse","(string $url)","Parse an URL and returns its composition as an array,",2],["Url::resolvePath","Library\\Helper\\Url","Library\/Helper\/Url.html#method_resolvePath","(string $url, boolean $realpath = false)","Returns the URL with paths cleaned (`.\/` and `..\/`",2],["Url::resolveHttp","Library\\Helper\\Url","Library\/Helper\/Url.html#method_resolveHttp","(string $url)","Returns an URL with leading 'http:\/\/' if it was absent",2],["Url::getAbsoluteUrl","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getAbsoluteUrl","(string $url)","Returns if possible an absolute URL in the current",2],["Url::url","Library\\Helper\\Url","Library\/Helper\/Url.html#method_url","(<abbr title=\"Library\\Helper\\string\/array\/null\">string\/array\/null<\/abbr> $param = null, <abbr title=\"Library\\Helper\\string\/null\">string\/null<\/abbr> $value = null, <abbr title=\"Library\\Helper\\string\/null\">string\/null<\/abbr> $url = null)","Global URL builder",2],["Url::getParameter","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getParameter","(<abbr title=\"Library\\Helper\\string\/bool\">string\/bool<\/abbr> $param = false, <abbr title=\"Library\\Helper\\string\/null\">string\/null<\/abbr> $url = false)","Get the value of an URL parameter",2],["Url::setParameter","Library\\Helper\\Url","Library\/Helper\/Url.html#method_setParameter","(<abbr title=\"Library\\Helper\\string\/bool\">string\/bool<\/abbr> $var = &#039;&#039;, <abbr title=\"Library\\Helper\\string\/false\">string\/false<\/abbr> $val = false, <abbr title=\"Library\\Helper\\string\/false\">string\/false<\/abbr> $url = false, bool $rebuild = true)","Set the value of an URL parameter",2],["Url::build","Library\\Helper\\Url","Library\/Helper\/Url.html#method_build","(array $url_components = null, <abbr title=\"Library\\Helper\\string\/array\/boolean\">string\/array\/boolean<\/abbr> $not_toput = null)","Rebuild a full URL string from an array of elements",2],["Url::isUrl","Library\\Helper\\Url","Library\/Helper\/Url.html#method_isUrl","(string $url = null, array $protocols = array(&#039;http&#039;, &#039;https&#039;, &#039;ftp&#039;), <abbr title=\"Library\\Helper\\bool\/string\">bool\/string<\/abbr> $localhost = false)","Validate an URL (without a hash content)",2],["Url::isEmail","Library\\Helper\\Url","Library\/Helper\/Url.html#method_isEmail","(string $email = null)","Validate an email address",2],["ContentType::createFromContent","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_createFromContent","(string $content)","Create a new ContentType object extracting the type",2],["ContentType::guessContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_guessContentType","(string $content)","",2],["ContentType::__construct","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method___construct","(string $content_type)","Constructor : defines the current URL and gets the",2],["ContentType::__toString","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method___toString","()","",2],["ContentType::setContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_setContentType","(string $content_type)","",2],["ContentType::getContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_getContentType","()","",2],["ContentType::setContentTypeObject","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_setContentTypeObject","(<a href=\"Library\/HttpFundamental\/ContentTypeInterface.html\"><abbr title=\"Library\\HttpFundamental\\ContentTypeInterface\">ContentTypeInterface<\/abbr><\/a> $content_type_object)","",2],["ContentType::getContentTypeObject","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_getContentTypeObject","()","",2],["ContentType::prepareContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_prepareContentType","(string $content_type)","",2],["ContentType::prepareResponse","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["ContentType::parseContent","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_parseContent","(string $content)","Parse an input content",2],["ContentType::prepareContent","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["ContentTypeInterface::prepareResponse","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["ContentTypeInterface::parseContent","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_parseContent","(string $content)","Parse an input content",2],["ContentTypeInterface::prepareContent","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_prepareContent","(string|array $content)","Prepare a content for output",2],["ContentTypeInterface::getContentType","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Html::prepareResponse","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Html::parseContent","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_parseContent","(string $content)","Parse an input content",2],["Html::prepareContent","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Html::getContentType","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Json::prepareResponse","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Json::parseContent","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_parseContent","(string $content)","Parse an input content",2],["Json::prepareContent","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Json::getContentType","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_getContentType","()","Get the \"content-Type\" header value",2],["PlainText::prepareResponse","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["PlainText::parseContent","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_parseContent","(string $content)","Parse an input content",2],["PlainText::prepareContent","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["PlainText::getContentType","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Xml::prepareResponse","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Xml::parseContent","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_parseContent","(string $content)","Parse an input content",2],["Xml::prepareContent","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Xml::getContentType","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Cookie::__construct","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method___construct","(string $cookie_name = null, string|array $cookie_value = null, int $flag = self::FLATNESS_ARRAY)","",2],["Cookie::setFlag","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setFlag","(int $flag)","",2],["Cookie::getFlag","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getFlag","()","",2],["Cookie::setName","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setName","(string $name)","",2],["Cookie::getName","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getName","()","",2],["Cookie::setValue","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setValue","(string $value)","",2],["Cookie::getValue","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getValue","()","",2],["Cookie::getSafeValue","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeValue","()","",2],["Cookie::setExpire","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setExpire","(int $expire)","",2],["Cookie::getExpire","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getExpire","()","",2],["Cookie::getSafeExpire","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeExpire","()","",2],["Cookie::setPath","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setPath","(string $path)","",2],["Cookie::getPath","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getPath","()","",2],["Cookie::getSafePath","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafePath","()","",2],["Cookie::setDomain","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setDomain","(string $domain)","",2],["Cookie::getDomain","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getDomain","()","",2],["Cookie::getSafeDomain","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeDomain","()","",2],["Cookie::setSecure","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setSecure","(string $secure)","",2],["Cookie::getSecure","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSecure","()","",2],["Cookie::getSafeSecure","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeSecure","()","",2],["Cookie::setHttponly","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setHttponly","(string $https)","",2],["Cookie::getHttponly","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getHttponly","()","",2],["Cookie::getSafeHttponly","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeHttponly","()","",2],["Cookie::sendAsRaw","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_sendAsRaw","()","",2],["Cookie::sendAsEncoded","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_sendAsEncoded","()","",2],["Cookie::setCookieFuncArguments","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setCookieFuncArguments","(array $args)","",2],["Cookie::getCookieFuncArguments","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getCookieFuncArguments","(bool $organize = true)","",2],["Cookie::getCookieFuncArgument","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getCookieFuncArgument","(string $var)","",2],["Cookie::addCookieFuncArgument","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_addCookieFuncArgument","(string $var, mixed $val)","",2],["Cookie::clearCookieFuncArgument","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_clearCookieFuncArgument","(string $var)","",2],["Cookie::exists","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_exists","(string $cookie_name = null)","Test if a cookie exists",2],["Cookie::read","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_read","(string $cookie_name = null)","Get a cookie value",2],["Cookie::send","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_send","(string $cookie_name = null, string|array $cookie_value = null)","Set a cookie value",2],["Cookie::addInCookie","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_addInCookie","(string $variable_name, string $variable_value, string $cookie_name = null)","Add a variable value in a cookie",2],["Cookie::clear","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_clear","(string $cookie_name = null)","Clear a cookie",2],["Request::create","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_create","(string $url = null, int $flag = self::NO_REWRITE, string $protocol = &#039;http&#039;, string $method = &#039;get&#039;, array $headers = null, array $arguments = null, array $data = null, array $session = null, array $files = null, array $cookies = null)","Static constructor : defines the current URL and gets",2],["Request::__construct","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method___construct","(string $url = null, int $flag = self::NO_REWRITE)","Constructor : defines the request URL and the object",2],["Request::guessFromCurrent","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_guessFromCurrent","()","Populate the request object with current HTTP request",2],["Request::setFlag","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setFlag","(int $flag)","",2],["Request::getFlag","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getFlag","()","",2],["Request::setUrl","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setUrl","(string $url)","",2],["Request::getUrl","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getUrl","()","",2],["Request::setProtocol","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setProtocol","(string $protocol)","",2],["Request::getProtocol","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getProtocol","()","",2],["Request::setMethod","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setMethod","(string $method)","",2],["Request::getMethod","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getMethod","()","",2],["Request::setHeaders","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setHeaders","(array $headers = null)","",2],["Request::getHeaders","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getHeaders","()","",2],["Request::getHeader","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getHeader","(string $name)","",2],["Request::setArguments","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setArguments","(string|array $arguments = null)","",2],["Request::getArguments","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getArguments","()","",2],["Request::getArgument","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getArgument","(string $param = null, mixed $default = false, bool $clean = true, int $clean_flags = ENT_QUOTES, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::setData","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setData","(array|string $data = null)","",2],["Request::getData","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getData","(string $param = null, mixed $default = false, bool $clean = true, int $clean_flags = ENT_QUOTES, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::setFiles","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setFiles","(array $files = null)","",2],["Request::getFiles","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getFiles","()","",2],["Request::getFile","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getFile","(string $param, string $index = null)","",2],["Request::setSession","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setSession","(array $session = null)","",2],["Request::getSession","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getSession","(string $param = null)","",2],["Request::setCookies","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setCookies","(array $cookies = null)","",2],["Request::getCookies","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getCookies","()","",2],["Request::getCookie","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getCookie","(string $param)","",2],["Request::setAuthentication","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthentication","(array $authentication = null)","",2],["Request::setAuthenticationType","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthenticationType","(string $type)","",2],["Request::setAuthenticationUser","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthenticationUser","(string $user)","",2],["Request::setAuthenticationPassword","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthenticationPassword","(string $pw)","",2],["Request::getAuthentication","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getAuthentication","(string $param = null)","",2],["Request::buildUrl","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_buildUrl","()","",2],["Request::isAjax","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isAjax","()","",2],["Request::isCli","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isCli","()","",2],["Request::isGet","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isGet","()","",2],["Request::isPost","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isPost","()","",2],["Request::isPut","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isPut","()","",2],["Request::getGet","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getGet","(string $varname, mixed $default = null)","",2],["Request::getPost","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getPost","(string $varname, mixed $default = null)","",2],["Request::getGetOrPost","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getGetOrPost","(string $varname, mixed $default = null)","",2],["Request::getPostOrGet","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getPostOrGet","(string $varname, mixed $default = null)","",2],["Request::cleanArgument","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_cleanArgument","(string $arg_value, int $flags = ENT_QUOTES, string $encoding = &#039;UTF-8&#039;)","Clean the value taken from request arguments or data",2],["Request::getEnvironment","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getEnvironment","(string $varname)","",2],["Request::getClientIp","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getClientIp","()","",2],["Request::getallheaders","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getallheaders","()","Emulation of internal `getallheaders()` function as",2],["Response::__construct","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method___construct","($content = null, $charset = null)","Constructor : defines the current URL and gets the",2],["Response::__toString","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method___toString","()","",2],["Response::setProtocol","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setProtocol","($value)","",2],["Response::getProtocol","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getProtocol","()","",2],["Response::setHeaders","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setHeaders","(array $headers)","",2],["Response::addHeader","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_addHeader","($header, $value)","",2],["Response::getHeader","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getHeader","($header, $default = null)","",2],["Response::getHeaders","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getHeaders","()","",2],["Response::setStatus","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setStatus","($flag)","",2],["Response::getStatus","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getStatus","()","",2],["Response::setCharset","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setCharset","($string)","",2],["Response::getCharset","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getCharset","()","",2],["Response::addContent","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_addContent","($name, $content)","",2],["Response::setContents","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setContents","(array $contents)","",2],["Response::getContent","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContent","($name, $default = null)","",2],["Response::getContents","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContents","()","",2],["Response::getContentsAsString","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContentsAsString","()","",2],["Response::setContentType","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setContentType","(string $type)","",2],["Response::getContentType","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContentType","()","",2],["Response::guessContentType","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_guessContentType","()","",2],["Response::renderHeaders","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_renderHeaders","()","",2],["Response::header","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_header","(string $str)","Writes a header string if headers had not been sent",2],["Response::send","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_send","($return_string = false)","Send the response to the device",2],["Response::download","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_download","($file = null, $type = null, $file_name = null)","Force client to download a file",2],["Response::flush","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_flush","($file_content = null, $type = null)","Flush (display) a file content",2],["Response::redirect","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_redirect","($url, $permanent = false)","",2],["Logger::__construct","Library\\Logger","Library\/Logger.html#method___construct","(array $user_options = array())","Creation of a new logger entry",2],["Logger::log","Library\\Logger","Library\/Logger.html#method_log","(int $level, string $message, array $context = array(), string $logname = null)","Logs with an arbitrary level.",2],["Logger::__set","Library\\Logger","Library\/Logger.html#method___set","(string $var, mixed $val)","Allows to set a property or a configuration entry like",2],["Logger::__get","Library\\Logger","Library\/Logger.html#method___get","(string $var)","Allows to call a configuration entry like : $logger->config_name",2],["Logger::getOptions","Library\\Logger","Library\/Logger.html#method_getOptions","()","",2],["Logger::interpolate","Library\\Logger","Library\/Logger.html#method_interpolate","(string $message, array $context = array(), bool $silent = false)","Interpolates context values into the message placeholders.",2],["Logger::getUserIp","Library\\Logger","Library\/Logger.html#method_getUserIp","()","Get the user IP address",2],["Logger::writeArray","Library\\Logger","Library\/Logger.html#method_writeArray","(array $array)","Write an array on one line",2],["AbstractInvokable::__invoke","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___invoke","(string $name)","Magic getter when calling an object as a function",2],["AbstractInvokable::__call","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___call","(string $name, array $arguments)","Magic handler when calling a non-existing method on",2],["AbstractInvokable::__callStatic","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___callStatic","(string $name, array $arguments)","Magic handler when calling a non-eixsting method statically",2],["AbstractInvokable::__get","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___get","(string $name)","Magic getter",2],["AbstractInvokable::__set","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___set","(string $name, mixed $value)","Magic setter",2],["AbstractInvokable::__isset","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___isset","(string $name)","Magic checker",2],["AbstractInvokable::__unset","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___unset","(string $name)","Magic unsetter",2],["AbstractInvokable::findPropertyName","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method_findPropertyName","(string $name)","Search a property name in the current object with one",2],["AbstractInvokable::findPropertyNameStatic","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method_findPropertyNameStatic","(string $name, string|object $object)","Search a property name in the current object with one",2],["InvokableAccessException::__construct","Library\\Object\\InvokableAccessException","Library\/Object\/InvokableAccessException.html#method___construct","(string $property_name = &#039;&#039;, string $object_name = &#039;&#039;, int $code, <abbr title=\"Library\\Object\\Exception\">Exception<\/abbr> $previous = null)","Constructor: creation of the parent instance",2],["InvokableInterface::__call","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___call","(string $name, array $arguments)","Magic handler when calling a non-existing method on",2],["InvokableInterface::__callStatic","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___callStatic","(string $name, array $arguments)","Magic handler when calling a non-eixsting method statically",2],["InvokableInterface::__get","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___get","(string $name)","Magic getter",2],["InvokableInterface::__set","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___set","(string $name, mixed $value)","Magic setter",2],["InvokableInterface::__isset","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___isset","(string $name)","Magic checker",2],["InvokableInterface::__unset","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___unset","(string $name)","Magic unsetter",2],["RegistryInvokable::__construct","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___construct","(array $data = null, int $flag = self::PROTECTED_PROPERTIES)","Object constructor",2],["RegistryInvokable::setFlag","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_setFlag","(int $flag)","Set the object flag for registry properties visibility",2],["RegistryInvokable::getFlag","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_getFlag","()","Get the object flag for registry properties visibility",2],["RegistryInvokable::__call","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___call","(string $name, array $arguments)","Magic handler when calling a non-existing method on",2],["RegistryInvokable::__callStatic","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___callStatic","(string $name, array $arguments)","Avoiding magic static handler",2],["RegistryInvokable::__get","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___get","(string $name)","Magic getter",2],["RegistryInvokable::__set","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___set","(string $name, mixed $value)","Magic setter",2],["RegistryInvokable::__isset","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___isset","(string $name)","Magic checker",2],["RegistryInvokable::__unset","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___unset","(string $name)","Magic unsetter",2],["RegistryInvokable::getData","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_getData","(string $name = null, mixed $default = null)","Global getter",2],["RegistryInvokable::setData","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_setData","($value, $arg2 = null)","Global setter",2],["Reporter::__construct","Library\\Reporter","Library\/Reporter.html#method___construct","(null|string $adapter_type = &#039;html&#039;, int $flag = self::OUTPUT_BY_LINE)","Construction of a new Reporter object",2],["Reporter::reset","Library\\Reporter","Library\/Reporter.html#method_reset","(bool $hard = false)","Reset all object properties to default or empty values",2],["Reporter::__toString","Library\\Reporter","Library\/Reporter.html#method___toString","()","Returns the object global output",2],["Reporter::setFlag","Library\\Reporter","Library\/Reporter.html#method_setFlag","(int $flag)","Set the reporter flag",2],["Reporter::getFlag","Library\\Reporter","Library\/Reporter.html#method_getFlag","()","Get the reporter flag",2],["Reporter::setAdapterType","Library\\Reporter","Library\/Reporter.html#method_setAdapterType","(string $type)","Set the adapter type to use",2],["Reporter::getAdapterType","Library\\Reporter","Library\/Reporter.html#method_getAdapterType","()","Get the current adapter name",2],["Reporter::setAdapter","Library\\Reporter","Library\/Reporter.html#method_setAdapter","(<a href=\"Library\/AbstractReporterAdapter.html\"><abbr title=\"Library\\AbstractReporterAdapter\">AbstractReporterAdapter<\/abbr><\/a> $adapter)","Set the adapter",2],["Reporter::getAdapter","Library\\Reporter","Library\/Reporter.html#method_getAdapter","()","Get the current adapter",2],["Reporter::setOutput","Library\\Reporter","Library\/Reporter.html#method_setOutput","(string $output)","Set some content",2],["Reporter::getOutput","Library\\Reporter","Library\/Reporter.html#method_getOutput","()","Get the processed content",2],["Reporter::render","Library\\Reporter","Library\/Reporter.html#method_render","(string $content, string $tag_type = &#039;default&#039;, string|array $args = null)","Render a content with a specific tag mask",2],["Reporter::write","Library\\Reporter","Library\/Reporter.html#method_write","(string $content, string $tag_type = &#039;default&#039;, string|array $args = null)","Display on screen a content with a specific tag mask",2],["Reporter::renderMulti","Library\\Reporter","Library\/Reporter.html#method_renderMulti","(string $content, string $tag_type = &#039;default&#039;, array $multi = array(), string|array $args = null, string $placeholder_mask = &#039;@%s@&#039;)","Render a content with a specific tag mask and some",2],["Html::renderTag","Library\\ReporterAdapter\\Html","Library\/ReporterAdapter\/Html.html#method_renderTag","(array|string $content, string $tag_type = &#039;default&#039;, array $args = array())","Render a content with a specific tag mask",2],["Router::__construct","Library\\Router","Library\/Router.html#method___construct","(string $route = null, array $routes_table = array(), array $arguments_table = array(), array $matchers_table = array())","Construction",2],["Router::getCollection","Library\\Router","Library\/Router.html#method_getCollection","(array $collection)","Get a collection object if it was not",2],["Router::setUrl","Library\\Router","Library\/Router.html#method_setUrl","(string $url)","Set the current URL",2],["Router::getUrl","Library\\Router","Library\/Router.html#method_getUrl","()","Get the current URL",2],["Router::setRoute","Library\\Router","Library\/Router.html#method_setRoute","(string $route)","Set the current route",2],["Router::getRoute","Library\\Router","Library\/Router.html#method_getRoute","()","Get the current route",2],["Router::setRouteParsed","Library\\Router","Library\/Router.html#method_setRouteParsed","(array $infos)","Set the current route parsed infos",2],["Router::getRouteParsed","Library\\Router","Library\/Router.html#method_getRouteParsed","()","Get the current route parsed infos",2],["Router::setRoutes","Library\\Router","Library\/Router.html#method_setRoutes","(<abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr> $collection)","Set the routes collection",2],["Router::getRoutes","Library\\Router","Library\/Router.html#method_getRoutes","()","Get the routes collection",2],["Router::setArgumentsMap","Library\\Router","Library\/Router.html#method_setArgumentsMap","(<abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr> $collection)","Set the arguments correspondances table like ( true",2],["Router::getArgumentsMap","Library\\Router","Library\/Router.html#method_getArgumentsMap","()","Get the arguments table",2],["Router::setMatchers","Library\\Router","Library\/Router.html#method_setMatchers","(<abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr> $collection)","Set a collection of masks to parse and match a route",2],["Router::getMatchers","Library\\Router","Library\/Router.html#method_getMatchers","()","Get the route matcher",2],["Router::routeExists","Library\\Router","Library\/Router.html#method_routeExists","(string $route)","Check if a route exists",2],["Router::generateUrl","Library\\Router","Library\/Router.html#method_generateUrl","(mixed $route_infos, string $base_uri = null, string $hash = null, string $separator = &#039;&amp;amp;&#039;)","Build a new route URL",2],["Router::matchUrl","Library\\Router","Library\/Router.html#method_matchUrl","(mixed $pathinfo)","Test if an URL has a corresponding route",2],["Router::distribute","Library\\Router","Library\/Router.html#method_distribute","()","Actually dispatch the current route",2],["Router::forward","Library\\Router","Library\/Router.html#method_forward","(mixed $pathinfo, string $hash = null)","Forward the application to a new route (no HTTP redirect)",2],["Router::redirect","Library\\Router","Library\/Router.html#method_redirect","(mixed $pathinfo, string $hash = null)","Make a redirection to a new route (HTTP redirect)",2],["Router::urlEncode","Library\\Router","Library\/Router.html#method_urlEncode","(string $str = null, bool $keep_mask = true)","Special 'urlencode' function to only encode strings",2],["FlashSession::__construct","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method___construct","()","Constructor",2],["FlashSession::read","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_read","()","Start the current session if so",2],["FlashSession::commit","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_commit","()","Save current session",2],["FlashSession::hasFlash","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_hasFlash","()","Test if current session has flash parameters",2],["FlashSession::getFlash","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_getFlash","(string $index)","Get a current session flash parameter",2],["FlashSession::setFlash","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_setFlash","(mixed $value, string $index = null)","Set a current session flash parameter",2],["FlashSession::allFlashes","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_allFlashes","()","Get current session flash parameters stack",2],["FlashSession::clearFlashes","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_clearFlashes","()","Delete current session flash parameters",2],["Session::__construct","Library\\Session\\Session","Library\/Session\/Session.html#method___construct","()","Constructor",2],["Session::__destruct","Library\\Session\\Session","Library\/Session\/Session.html#method___destruct","()","Automatically store new entries at object destruction",2],["Session::addSessionTable","Library\\Session\\Session","Library\/Session\/Session.html#method_addSessionTable","(string $index, mixed $value)","Add a session table entry",2],["Session::getSessionTable","Library\\Session\\Session","Library\/Session\/Session.html#method_getSessionTable","()","Get the full session table",2],["Session::getId","Library\\Session\\Session","Library\/Session\/Session.html#method_getId","()","Get current session ID",2],["Session::getName","Library\\Session\\Session","Library\/Session\/Session.html#method_getName","()","Get current session name",2],["Session::isOpened","Library\\Session\\Session","Library\/Session\/Session.html#method_isOpened","()","Test if the current session is already started",2],["Session::isLoaded","Library\\Session\\Session","Library\/Session\/Session.html#method_isLoaded","()","Test if the current session is already loaded",2],["Session::start","Library\\Session\\Session","Library\/Session\/Session.html#method_start","()","Start the current session and read it",2],["Session::open","Library\\Session\\Session","Library\/Session\/Session.html#method_open","()","Open the current session",2],["Session::close","Library\\Session\\Session","Library\/Session\/Session.html#method_close","()","Close the current session",2],["Session::read","Library\\Session\\Session","Library\/Session\/Session.html#method_read","()","Read the current session contents",2],["Session::commit","Library\\Session\\Session","Library\/Session\/Session.html#method_commit","()","Save current session",2],["Session::clear","Library\\Session\\Session","Library\/Session\/Session.html#method_clear","()","Destroy current session",2],["Session::regenerateId","Library\\Session\\Session","Library\/Session\/Session.html#method_regenerateId","()","Regenrate current session ID",2],["Session::getAttributes","Library\\Session\\Session","Library\/Session\/Session.html#method_getAttributes","()","Get all current session values",2],["Session::has","Library\\Session\\Session","Library\/Session\/Session.html#method_has","(string $param)","Test if the current session has a parameter",2],["Session::get","Library\\Session\\Session","Library\/Session\/Session.html#method_get","(string $param)","Get current session parameter",2],["Session::set","Library\\Session\\Session","Library\/Session\/Session.html#method_set","(string $param, mixed $value)","Set current session parameter",2],["Session::remove","Library\\Session\\Session","Library\/Session\/Session.html#method_remove","(string $param)","Delete a session parameter",2],["Session::getBackup","Library\\Session\\Session","Library\/Session\/Session.html#method_getBackup","(string $param)","Get an initial session value",2],["SessionInterface::start","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_start","()","Start the current session and load it",2],["SessionInterface::open","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_open","()","Open the current session",2],["SessionInterface::close","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_close","()","Close the current session",2],["SessionInterface::isOpened","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_isOpened","()","Test if the current session is already started",2],["SessionInterface::read","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_read","()","Read current session contents",2],["SessionInterface::isLoaded","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_isLoaded","()","Test if the current session is already loaded",2],["SessionInterface::commit","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_commit","()","Save current session contents",2],["SessionInterface::clear","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_clear","()","Destroy current session",2],["SessionInterface::regenerateId","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_regenerateId","()","Regenrate current session ID",2],["SessionInterface::getId","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_getId","()","Get current session ID",2],["SessionInterface::getName","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_getName","()","Get current session name",2],["SessionInterface::getAttributes","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_getAttributes","()","Get all current session values",2],["SessionInterface::has","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_has","(string $param)","Test if the current session has a parameter",2],["SessionInterface::get","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_get","(string $param)","Get current session parameter",2],["SessionInterface::set","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_set","(string $param, mixed $value)","Set current session parameter",2],["SessionInterface::remove","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_remove","(string $param)","Delete a session parameter",2],["Config::load","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_load","(string $class_name = null)","",2],["Config::loaded","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_loaded","()","Check if the configurator is loaded",2],["Config::setConfigurator","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_setConfigurator","(<a href=\"Library\/StaticConfiguration\/ConfiguratorInterface.html\"><abbr title=\"Library\\StaticConfiguration\\ConfiguratorInterface\">ConfiguratorInterface<\/abbr><\/a> $object)","",2],["Config::getConfigurator","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getConfigurator","()","",2],["Config::setRegistry","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_setRegistry","(array $registry)","",2],["Config::getRegistry","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getRegistry","()","",2],["Config::getDefaults","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getDefaults","()","",2],["Config::getRequired","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getRequired","()","",2],["Config::getInternal","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getInternal","(string $name)","",2],["Config::validate","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_validate","(array $entries)","Check if a custom Config class defines all required",2],["Config::overload","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_overload","(array $settings)","Overload a config registry",2],["Config::set","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_set","(string $name, mixed $value)","",2],["Config::get","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_get","(string $name, mixed $default = null)","",2],["Config::getDefault","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getDefault","(string $name)","",2],["ConfiguratorInterface::getDefaults","Library\\StaticConfiguration\\ConfiguratorInterface","Library\/StaticConfiguration\/ConfiguratorInterface.html#method_getDefaults","()","Get the default configuration values",2],["ConfiguratorInterface::getRequired","Library\\StaticConfiguration\\ConfiguratorInterface","Library\/StaticConfiguration\/ConfiguratorInterface.html#method_getRequired","()","Get the required configuration entries",2],["MorseCode::getLetter","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_getLetter","($char)","",2],["MorseCode::getWord","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_getWord","($word)","",2],["MorseCode::getString","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_getString","($str)","",2],["MorseCode::encode","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_encode","($str)","",2],["Pagination::__construct","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method___construct","(array $collection = array(), int $limit = null, int $offset)","",2],["Pagination::setLimit","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setLimit","($limit)","",2],["Pagination::setOffset","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setOffset","($offset)","",2],["Pagination::setPagesNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setPagesNumber","($pages_number)","",2],["Pagination::setItemsNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setItemsNumber","($items_number)","",2],["Pagination::setCollection","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setCollection","(array $collection)","",2],["Pagination::getLimit","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getLimit","()","",2],["Pagination::getOffset","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getOffset","()","",2],["Pagination::getPagesNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getPagesNumber","()","",2],["Pagination::getItemsNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getItemsNumber","()","",2],["Pagination::getCollection","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getCollection","()","",2],["Pagination::getPaginatedCollection","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getPaginatedCollection","()","",2],["Pagination::setOffsetByPageNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setOffsetByPageNumber","($page_number)","",2],["Pagination::exists","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_exists","()","",2],["Pagination::current","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_current","()","",2],["Pagination::key","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_key","()","",2],["Pagination::next","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_next","()","",2],["Pagination::rewind","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_rewind","()","",2],["Pagination::valid","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_valid","()","",2],["Pagination::isFirst","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_isFirst","()","",2],["Pagination::isLast","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_isLast","()","",2],["Pagination::isCurrent","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_isCurrent","()","",2],["Pagination::getPageNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getPageNumber","()","",2],["Table::__construct","Library\\Tool\\Table","Library\/Tool\/Table.html#method___construct","(array $body = array(), array $header = array(), array $footer = array(), string $title = null, int $pad_flag = self::PAD_BY_EMPTY_CELLS)","Table construction",2],["Table::__toString","Library\\Tool\\Table","Library\/Tool\/Table.html#method___toString","()","Rendering of the table",2],["Table::getTable","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTable","()","Get the full table array",2],["Table::getTableIterator","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableIterator","(string $part = &#039;body&#039;, int $iterator_flag = self::ITERATE_ON_LINES)","Get the full table or a part of the table as an `ArrayIterator`",2],["Table::getLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getLine","(int $line_index = null)","Get a line of the table body",2],["Table::addLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addLine","(array|string $contents = null, mixed $default = null)","Add a new line in the table body",2],["Table::getColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getColumn","(int $column_index = null)","Get a column of the table body",2],["Table::addColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addColumn","(array|string $body = null, mixed $default = null, array $headers = null, array $footers = null)","Add a new column in the table body",2],["Table::getCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getCell","(int $line_index = null, int $cell_index = null)","Get a cell of the table body",2],["Table::addCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addCell","(string $cell = null)","Add a new cell in the current line of the table body",2],["Table::setPadFlag","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setPadFlag","(int $flag)","Set the table flag used for cell padding",2],["Table::getPadFlag","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getPadFlag","()","Get the table pad flag",2],["Table::setTitle","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setTitle","(string $title)","Set the table title",2],["Table::getTitle","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTitle","()","Get the table title",2],["Table::setHeader","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeader","(array $contents)","Set the table headers lines",2],["Table::setHeaderLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderLine","(array $contents, int $line_index = null, mixed $default = null)","Set a table header line",2],["Table::addHeaderLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderLine","(array $contents, int $line_index = null, mixed $default = null)","Add a new table header line",2],["Table::setHeaderColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Set a column in the table header",2],["Table::addHeaderColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Add a new column in the table header",2],["Table::setHeaderCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderCell","(array $content, int $line_index = null, int $cell_index = null)","Set a table header cell",2],["Table::addHeaderCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderCell","(array $content, int $line_index = null, int $cell_index = null)","Add a new table header cell",2],["Table::getHeader","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeader","()","Get the table headers lines",2],["Table::getHeaderLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderLine","(int $line_index = null)","Get a table headers line",2],["Table::getHeaderColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderColumn","(int $column_index = null)","Get a table headers column",2],["Table::getHeaderCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderCell","(int $line_index = null, int $cell_index = null)","Get a table headers cell",2],["Table::setBody","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBody","(array $contents)","Set the table body lines",2],["Table::setBodyLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyLine","(array $contents, int $line_index = null)","Set a table body line",2],["Table::addBodyLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyLine","(array $contents, int $line_index = null)","Add a new table body line",2],["Table::setBodyColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Set a column in the table body",2],["Table::addBodyColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Add a new column in the table body",2],["Table::setBodyCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyCell","(array $content, int $line_index = null, int $cell_index = null)","Set a table body cell",2],["Table::addBodyCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyCell","(array $content, int $line_index = null, int $cell_index = null)","Add a new table body cell",2],["Table::getBody","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBody","()","Get the table body lines",2],["Table::getBodyLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyLine","(int $line_index = null)","Get a table body line",2],["Table::getBodyColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyColumn","(int $column_index = null)","Get a column of the table body",2],["Table::getBodyCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyCell","(int $line_index = null, int $cell_index = null)","Get a table body cell",2],["Table::setFooter","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooter","(array $contents)","Set the table footer lines",2],["Table::setFooterLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterLine","(array $contents, int $line_index = null)","Set a table footer line",2],["Table::addFooterLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterLine","(array $contents, int $line_index = null)","Add a new table footer line",2],["Table::setFooterColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Set a column in the table footers",2],["Table::addFooterColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Add a new column in the table footers",2],["Table::setFooterCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterCell","(array $content, int $line_index = null, int $cell_index = null)","Set a table footer cell",2],["Table::addFooterCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterCell","(array $content, int $line_index = null, int $cell_index = null)","Add a new table footer cell",2],["Table::getFooter","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooter","()","Get the table footers lines",2],["Table::getFooterLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterLine","(int $line_index = null)","Get a table footers line",2],["Table::getFooterColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterColumn","(int $column_index = null)","Get a table footers column",2],["Table::getFooterCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterCell","(int $line_index = null, int $cell_index = null)","Get a table footers cell",2],["Table::getTableColumnSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableColumnSize","()","Get the table columns size",2],["Table::getTableLineSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableLineSize","()","Get the table lines size",2],["Table::getTableCellSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableCellSize","()","Get the table cells size",2],["Table::getSizesInfos","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getSizesInfos","()","Get a string information presenting an overview of",2],["Table::_resetSizes","Library\\Tool\\Table","Library\/Tool\/Table.html#method__resetSizes","()","Reset the table sizes",2],["Table::render","Library\\Tool\\Table","Library\/Tool\/Table.html#method_render","(int $str_pad_flag = STR_PAD_RIGHT)","Plain text rendering of the table",2],["Table::setContents","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContents","()","",2],["Table::setContentLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentLine","()","",2],["Table::addContentLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentLine","()","",2],["Table::setContentColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentColumn","()","",2],["Table::setContentCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentCol","()","",2],["Table::setBodyCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyCol","()","",2],["Table::addContentColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentColumn","()","",2],["Table::addContentCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentCol","()","",2],["Table::addBodyCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyCol","()","",2],["Table::setContentCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentCell","()","",2],["Table::addContentCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentCell","()","",2],["Table::getContents","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContents","()","",2],["Table::getContentLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentLine","()","",2],["Table::getContentColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentColumn","()","",2],["Table::getContentCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentCol","()","",2],["Table::getBodyCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyCol","()","",2],["Table::getContentCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentCell","()","",2],["Table::getTableColSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableColSize","()","",2],["Table::getCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getCol","()","",2],["Table::getHeaderCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderCol","()","",2],["Table::addHeaderCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderCol","()","",2],["Table::setHeaderCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderCol","()","",2],["Table::getFooterCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterCol","()","",2],["Table::addFooterCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterCol","()","",2],["Table::setFooterCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterCol","()","",2],["Table::getColumnSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getColumnSize","()","",2],["Table::getColSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getColSize","()","",2],["Table::getLineSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getLineSize","()","",2],["Table::getCellSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getCellSize","()","",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']